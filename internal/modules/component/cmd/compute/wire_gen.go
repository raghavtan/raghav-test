// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package compute

import (
	"github.com/google/wire"
	"github.com/motain/of-catalog/internal/modules/component/handler"
	"github.com/motain/of-catalog/internal/modules/component/repository"
	"github.com/motain/of-catalog/internal/services/compassservice"
	"github.com/motain/of-catalog/internal/services/configservice"
	"github.com/motain/of-catalog/internal/services/factsystem/aggregators"
	"github.com/motain/of-catalog/internal/services/factsystem/extractors"
	"github.com/motain/of-catalog/internal/services/factsystem/processor"
	"github.com/motain/of-catalog/internal/services/factsystem/validators"
	"github.com/motain/of-catalog/internal/services/githubservice"
	"github.com/motain/of-catalog/internal/services/jsonservice"
	"github.com/motain/of-catalog/internal/services/keyringservice"
	"github.com/motain/of-catalog/internal/services/prometheusservice"
)

// Injectors from wire.go:

func initializeHandler() *handler.ComputeHandler {
	configService := configservice.NewConfigService()
	graphQLClientInterface := compassservice.NewGraphQLClient(configService)
	httpClientInterface := compassservice.NewHTTPClient(configService)
	compassService := compassservice.NewCompassService(configService, graphQLClientInterface, httpClientInterface)
	repositoryRepository := repository.NewRepository(compassService)
	aggregator := aggregators.NewAggregator()
	validator := validators.NewValidator()
	jsonServiceInterface := jsonservice.NewJSONService(configService)
	keyringService := keyringservice.NewKeyringService()
	gitHubClientInterface := githubservice.NewGitHubClient(configService, keyringService)
	gitHubService := githubservice.NewGitHubService(gitHubClientInterface)
	prometheusClientInterface := prometheusservice.NewPrometheusClient(configService)
	prometheusService := prometheusservice.NewPrometheusService(prometheusClientInterface)
	extractor := extractors.NewExtractor(configService, jsonServiceInterface, gitHubService, prometheusService)
	processorProcessor := processor.NewProcessor(aggregator, validator, extractor)
	computeHandler := handler.NewComputeHandler(repositoryRepository, processorProcessor)
	return computeHandler
}

// wire.go:

var ProviderSet = wire.NewSet(keyringservice.NewKeyringService, wire.Bind(new(keyringservice.KeyringServiceInterface), new(*keyringservice.KeyringService)), configservice.NewConfigService, wire.Bind(new(configservice.ConfigServiceInterface), new(*configservice.ConfigService)), compassservice.NewGraphQLClient, compassservice.NewHTTPClient, compassservice.NewCompassService, wire.Bind(new(compassservice.CompassServiceInterface), new(*compassservice.CompassService)), githubservice.NewGitHubClient, githubservice.NewGitHubService, wire.Bind(new(githubservice.GitHubServiceInterface), new(*githubservice.GitHubService)), prometheusservice.NewPrometheusService, prometheusservice.NewPrometheusClient, wire.Bind(new(prometheusservice.PrometheusServiceInterface), new(*prometheusservice.PrometheusService)), jsonservice.NewJSONService, repository.NewRepository, wire.Bind(new(repository.RepositoryInterface), new(*repository.Repository)), aggregators.NewAggregator, wire.Bind(new(aggregators.AggregatorInterface), new(*aggregators.Aggregator)), extractors.NewExtractor, wire.Bind(new(extractors.ExtractorInterface), new(*extractors.Extractor)), validators.NewValidator, wire.Bind(new(validators.ValidatorInterface), new(*validators.Validator)), processor.NewProcessor, wire.Bind(new(processor.ProcessorInterface), new(*processor.Processor)), handler.NewComputeHandler)

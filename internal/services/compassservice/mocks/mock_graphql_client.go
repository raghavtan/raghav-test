// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/motain/of-catalog/internal/services/compassservice (interfaces: GraphQLClientInterface)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/mock_graphql_client.go -package=compassservice github.com/motain/of-catalog/internal/services/compassservice GraphQLClientInterface
//

// Package compassservice is a generated GoMock package.
package compassservice

import (
	context "context"
	reflect "reflect"

	graphql "github.com/machinebox/graphql"
	gomock "go.uber.org/mock/gomock"
)

// MockGraphQLClientInterface is a mock of GraphQLClientInterface interface.
type MockGraphQLClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGraphQLClientInterfaceMockRecorder
	isgomock struct{}
}

// MockGraphQLClientInterfaceMockRecorder is the mock recorder for MockGraphQLClientInterface.
type MockGraphQLClientInterfaceMockRecorder struct {
	mock *MockGraphQLClientInterface
}

// NewMockGraphQLClientInterface creates a new mock instance.
func NewMockGraphQLClientInterface(ctrl *gomock.Controller) *MockGraphQLClientInterface {
	mock := &MockGraphQLClientInterface{ctrl: ctrl}
	mock.recorder = &MockGraphQLClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGraphQLClientInterface) EXPECT() *MockGraphQLClientInterfaceMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockGraphQLClientInterface) Run(ctx context.Context, req *graphql.Request, resp any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", ctx, req, resp)
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockGraphQLClientInterfaceMockRecorder) Run(ctx, req, resp any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockGraphQLClientInterface)(nil).Run), ctx, req, resp)
}

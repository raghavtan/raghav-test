// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/motain/of-catalog/internal/services/configservice (interfaces: ConfigServiceInterface)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/mock_config_service.go -package=configservice github.com/motain/of-catalog/internal/services/configservice ConfigServiceInterface
//

// Package configservice is a generated GoMock package.
package configservice

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockConfigServiceInterface is a mock of ConfigServiceInterface interface.
type MockConfigServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockConfigServiceInterfaceMockRecorder
	isgomock struct{}
}

// MockConfigServiceInterfaceMockRecorder is the mock recorder for MockConfigServiceInterface.
type MockConfigServiceInterfaceMockRecorder struct {
	mock *MockConfigServiceInterface
}

// NewMockConfigServiceInterface creates a new mock instance.
func NewMockConfigServiceInterface(ctrl *gomock.Controller) *MockConfigServiceInterface {
	mock := &MockConfigServiceInterface{ctrl: ctrl}
	mock.recorder = &MockConfigServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigServiceInterface) EXPECT() *MockConfigServiceInterfaceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockConfigServiceInterface) Get(envVar string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", envVar)
	ret0, _ := ret[0].(string)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockConfigServiceInterfaceMockRecorder) Get(envVar any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockConfigServiceInterface)(nil).Get), envVar)
}

// GetAWSRegion mocks base method.
func (m *MockConfigServiceInterface) GetAWSRegion() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAWSRegion")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAWSRegion indicates an expected call of GetAWSRegion.
func (mr *MockConfigServiceInterfaceMockRecorder) GetAWSRegion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAWSRegion", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetAWSRegion))
}

// GetAWSRole mocks base method.
func (m *MockConfigServiceInterface) GetAWSRole() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAWSRole")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAWSRole indicates an expected call of GetAWSRole.
func (mr *MockConfigServiceInterfaceMockRecorder) GetAWSRole() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAWSRole", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetAWSRole))
}

// GetCompassCloudId mocks base method.
func (m *MockConfigServiceInterface) GetCompassCloudId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCompassCloudId")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCompassCloudId indicates an expected call of GetCompassCloudId.
func (mr *MockConfigServiceInterfaceMockRecorder) GetCompassCloudId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCompassCloudId", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetCompassCloudId))
}

// GetCompassHost mocks base method.
func (m *MockConfigServiceInterface) GetCompassHost() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCompassHost")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCompassHost indicates an expected call of GetCompassHost.
func (mr *MockConfigServiceInterfaceMockRecorder) GetCompassHost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCompassHost", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetCompassHost))
}

// GetCompassToken mocks base method.
func (m *MockConfigServiceInterface) GetCompassToken() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCompassToken")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCompassToken indicates an expected call of GetCompassToken.
func (mr *MockConfigServiceInterfaceMockRecorder) GetCompassToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCompassToken", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetCompassToken))
}

// GetGithubOrg mocks base method.
func (m *MockConfigServiceInterface) GetGithubOrg() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGithubOrg")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetGithubOrg indicates an expected call of GetGithubOrg.
func (mr *MockConfigServiceInterfaceMockRecorder) GetGithubOrg() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGithubOrg", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetGithubOrg))
}

// GetGithubToken mocks base method.
func (m *MockConfigServiceInterface) GetGithubToken() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGithubToken")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetGithubToken indicates an expected call of GetGithubToken.
func (mr *MockConfigServiceInterfaceMockRecorder) GetGithubToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGithubToken", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetGithubToken))
}

// GetGithubUser mocks base method.
func (m *MockConfigServiceInterface) GetGithubUser() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGithubUser")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetGithubUser indicates an expected call of GetGithubUser.
func (mr *MockConfigServiceInterfaceMockRecorder) GetGithubUser() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGithubUser", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetGithubUser))
}

// GetPrometheusURL mocks base method.
func (m *MockConfigServiceInterface) GetPrometheusURL() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrometheusURL")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPrometheusURL indicates an expected call of GetPrometheusURL.
func (mr *MockConfigServiceInterfaceMockRecorder) GetPrometheusURL() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrometheusURL", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetPrometheusURL))
}

apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: adaptive-systems
    labels:
        grading-system: resiliency
    componentType:
        - service
        - cloud-resource
    facts:
        - id: app-toml-replicas-min
          type: extract
          source: github
          jsonPath: .service.replicas_min // .service.production.replicas_min | . >= 3
          repo: ${Metadata.Name}
          filePath: app.toml
          rule: jsonpath
        - id: app-toml-replicas-max-gt-replicas-min
          type: extract
          source: github
          jsonPath: (.service.replicas_min // .service.production.replicas_min) < (.service.replicas_max // .service.production.replicas_max)
          repo: ${Metadata.Name}
          filePath: app.toml
          rule: jsonpath
        - id: cpu-and-memory-hpa-are-set
          name: Validate that CPU and Memory Horizontal Pod Autoscalers are set
          type: aggregate
          dependsOn:
            - app-toml-replicas-min
            - app-toml-replicas-max-gt-replicas-min
          method: and
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/0f72a9b2-c7f2-4eff-b905-1e715c3a8810
    name: adaptive-systems
    description: https://github.com/motain/of-catalog/blob/main/docs/grading-system/resiliency.md#adaptive-systems
    format:
        unit: Adaptive Systems
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: organizational-standards
    labels:
        grading-system: production-readiness
    componentType:
        - service
        - cloud-resource
    facts:
        - id: readme-file
          name: Check if the README.md file exists
          type: extract
          source: github
          repo: ${Metadata.Name}
          filePath: README.md
          rule: notempty
        - id: docs-readme-file
          name: Check if the docs/README.md file exists
          type: extract
          source: github
          repo: ${Metadata.Name}
          filePath: docs/README.md
          rule: notempty
        - id: docs-index-file
          name: Check if the docs/index.md file exists
          type: extract
          source: github
          repo: ${Metadata.Name}
          filePath: docs/index.md
          rule: notempty
        - id: paas-onboarded
          name: Check if the service is using PaaS
          type: extract
          source: github
          repo: ${Metadata.Name}
          searchString: motain/onefootball-actions/paas-deploy@master
          rule: search
        - id: aggregate-readme-exists
          name: Check if repo has documentation
          type: aggregate
          dependsOn:
            - docs-index-file
            - docs-readme-file
            - readme-file
          method: or
        - id: aggregate
          name: Check if repo follows organizational standards
          type: aggregate
          dependsOn:
            - aggregate-readme-exists
            - paas-onboarded
          method: and
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/005d1bf2-7188-4682-861b-a1f8bb7043ed
    name: organizational-standards
    description: https://github.com/motain/of-catalog/blob/main/docs/grading-system/production-readiness.md#organizational-standards
    format:
        unit: Organizational Standards
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: instrumentation-check
    labels:
        grading-system: observability
    componentType:
        - service
        - cloud-resource
    facts:
        - id: read-otel-service-name-from-apptoml
          name: Read OTEL_SERVICE_NAME from app.toml
          type: extract
          source: github
          jsonPath: .envs.OTEL_SERVICE_NAME // .envs.production.OTEL_SERVICE_NAME // .service.production.envs.OTEL_SERVICE_NAME // .service.envs.OTEL_SERVICE_NAME
          repo: ${Metadata.Name}
          filePath: app.toml
          rule: jsonpath
        - id: validate-otel-service-name-matches-component-name
          name: validate OTEL_SERVICE_NAME matches component name
          type: validate
          dependsOn:
            - read-otel-service-name-from-apptoml
          rule: regex_match
          pattern: ^${Metadata.Name}.*$
        - id: read-otel-resource-attributes-from-apptoml
          name: Read OTEL_RESOURCE_ATTRIBUTES from app.toml
          type: extract
          source: github
          jsonPath: .envs.OTEL_RESOURCE_ATTRIBUTES // .envs.production.OTEL_RESOURCE_ATTRIBUTES // .service.production.envs.OTEL_RESOURCE_ATTRIBUTES
          repo: ${Metadata.Name}
          filePath: app.toml
          rule: jsonpath
        - id: validate-otel-resource-attributes-sample-rate
          name: validate OTEL_RESOURCE_ATTRIBUTES defines sample rate
          type: validate
          dependsOn:
            - read-otel-resource-attributes-from-apptoml
          rule: regex_match
          pattern: of\.sample_rate=\d+.*
        - id: validate-otel-resource-attributes-one-sample-rate
          name: validate OTEL_RESOURCE_ATTRIBUTES defines one sample rate
          type: validate
          dependsOn:
            - read-otel-resource-attributes-from-apptoml
          rule: regex_match
          pattern: of\.error_sample_rate=\d+.*
        - id: either-sample-rate-or-error-sample-rate
          name: Validate that OTEL_RESOURCE_ATTRIBUTES contains either of.sample_rate or of.error_sample_rate
          type: aggregate
          dependsOn:
            - validate-otel-resource-attributes-sample-rate
            - validate-otel-resource-attributes-error-sample-rate
          method: or
        - id: either-sample-rate-or-error-sample-rate
          name: Validate that both OTEL_SERVICE_NAME and OTEL_RESOURCE_ATTRIBUTES are set up correctly
          type: aggregate
          dependsOn:
            - validate-otel-service-name-matches-component-name
            - validate-otel-resource-attributes-one-sample-rate
          method: and
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/71dfd551-e995-4092-ab06-e2718e75641e
    name: instrumentation-check
    description: https://github.com/motain/of-catalog/blob/main/docs/grading-system/observability.md#instrumentation-check
    format:
        unit: Instrumentation Check
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: deployment-readiness
    labels:
        grading-system: production-readiness
    componentType:
        - service
        - cloud-resource
    facts:
        - id: deployment-readiness-replicas-service-production
          name: Check deployment readiness where min != Max, Min >= 3 and Max > 3
          type: extract
          source: github
          jsonPath: (.service.production.replicas_min != .service.production.replicas_max) and (.service.production.replicas_min >= 3) and (.service.production.replicas_max > 3)
          repo: ${Metadata.Name}
          filePath: app.toml
          rule: jsonpath
        - id: deployment-readiness-replicas-service
          name: Check deployment readiness where min != Max, Min >= 3 and Max > 3
          type: extract
          source: github
          jsonPath: (.service.replicas_min != .service.replicas_max) and (.service.replicas_min >= 3) and (.service.replicas_max > 3)
          repo: ${Metadata.Name}
          filePath: app.toml
          rule: jsonpath
        - id: aggregate-replicas
          name: Check deployment readiness where min != Max, Min >= 3 and Max > 3
          type: aggregate
          dependsOn:
            - deployment-readiness-replicas-service-production
            - deployment-readiness-replicas-service
          method: or
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/ef2ef7b8-cc47-4f67-84d3-ba9bebef1ba8
    name: deployment-readiness
    description: https://github.com/motain/of-catalog/blob/main/docs/grading-system/production-readiness.md#deployment-readiness
    format:
        unit: Deployment Standards
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: security-as-pipeline
    labels:
        grading-system: security
    componentType:
        - service
        - cloud-resource
    facts:
        - id: trivy-exists-in-ci
          name: Check if Trivy is used in CI/CD pipeline
          type: extract
          source: github
          repo: ${Metadata.Name}
          searchString: motain/onefootball-actions/security
          rule: search
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/295e70fa-9359-4a0f-9188-6f7b6a0dbd7e
    name: security-as-pipeline
    description: https://github.com/motain/of-catalog/blob/main/docs/grading-system/security.md#security-as-pipeline
    format:
        unit: Security as Pipeline
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: observability-documentation
    labels:
        grading-system: observability
    componentType:
        - service
        - cloud-resource
    facts:
        - id: extract-observability-md
          name: Extract observability.md
          type: extract
          source: github
          repo: ${Metadata.Name}
          filePath: docs/observability.md
          rule: notempty
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/c5f96c3d-6845-4155-9576-62f86725b07f
    name: observability-documentation
    description: https://github.com/motain/of-catalog/blob/main/docs/grading-system/observability.md#observability-documentation
    format:
        unit: Observability Documentation
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: vulnerability-management
    labels:
        grading-system: security
    componentType:
        - service
        - cloud-resource
    facts:
        - id: service-vulnerabilities-prometheus
          name: Get summary of vulnerabilities for services from Prometheus reports
          type: extract
          source: prometheus
          prometheusQuery: sum(trivy_image_vulnerabilities{namespace="${Metadata.Name}", severity="Critical" })
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/5c7562aa-6b71-4deb-911f-eebac354ee3e
    name: vulnerability-management
    description: https://github.com/motain/of-catalog/blob/main/docs/grading-system/security.md#vulnerability-management
    format:
        unit: Vulnerability Management
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: high-availability
    labels:
        grading-system: resiliency
    componentType:
        - service
        - cloud-resource
    facts:
        - id: app-toml-hpa-target-cpu
          type: extract
          source: github
          jsonPath: .service.target_cpu_utilization_percentage // .service.production.target_cpu_utilization_percentage | . >= 20
          repo: ${Metadata.Name}
          filePath: app.toml
          rule: jsonpath
        - id: app-toml-hpa-target-memory
          type: extract
          source: github
          jsonPath: .service.target_memory_utilization_percentage // .service.production.target_memory_utilization_percentage | . >= 20
          repo: ${Metadata.Name}
          filePath: app.toml
          rule: jsonpath
        - id: cpu-and-memory-hpa-are-set
          name: Validate that CPU and Memory Horizontal Pod Autoscalers are set
          type: aggregate
          dependsOn:
            - app-toml-hpa-target-cpu
            - app-toml-hpa-target-memory
          method: or
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/739d09e9-de03-426c-b82e-15e7aeb385b4
    name: high-availability
    description: https://github.com/motain/of-catalog/blob/main/docs/grading-system/resiliency.md#high-availability
    format:
        unit: High Availability
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: critical-alerts-slo-check
    labels:
        grading-system: observability
    componentType:
        - service
    facts:
        - id: fetch-slos
          name: Fetch SLOs
          type: extract
          source: jsonapi
          uri: https://api.eu1.honeycomb.io/1/slos/${Metadata.Name}
          jsonPath: .[].id
          auth:
            header: X-Honeycomb-Team
            tokenVar: HONEYCOMB_API_KEY
          rule: jsonpath
        - id: fetch-alerts-for-slos
          name: Fetch alerts for SLOs
          type: extract
          dependsOn:
            - fetch-slos
          source: jsonapi
          uri: https://api.eu1.honeycomb.io/1/burn_alerts/${Metadata.Name}?slo_id=:slo_id
          jsonPath: .[].id
          auth:
            header: X-Honeycomb-Team
            tokenVar: HONEYCOMB_API_KEY
          rule: jsonpath
        - id: count-slos
          name: Count SLOs
          type: aggregate
          dependsOn:
            - fetch-slos
          method: count
        - id: count-alerts-for-slos
          name: Count Alerts
          type: aggregate
          dependsOn:
            - fetch-alerts-for-slos
          method: count
        - id: validate-alerts-for-slos
          name: Validate that counts match
          type: validate
          dependsOn:
            - count-slos
            - count-alerts-for-slos
          rule: deps_match
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/a2523e39-c11a-4449-8465-f41613881b22
    name: critical-alerts-slo-check
    description: https://github.com/motain/of-catalog/blob/main/docs/grading-system/observability.md#critical-alerts-slo-check
    format:
        unit: Critical Alerts/SLO Check
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: allocation-efficiency
    labels:
        grading-system: cost-optimization
    componentType:
        - service
        - cloud-resource
    facts:
        - id: check-app-toml-resource-request
          name: Check if CPU requests and memory requests are defined in app.toml under [service] or [service.production]
          type: extract
          source: github
          jsonPath: (.service.cpu_requests // .service.production.cpu_requests | . != null) and (.service.memory_requests // .service.production.memory_requests | . != null)
          repo: ${Metadata.Name}
          filePath: app.toml
          rule: jsonpath
        - id: check-app-toml-cpu-limits
          name: Check if CPU limits are not defined in app.toml under [service] or [service.production]
          type: extract
          source: github
          jsonPath: .service.cpu_limits // .service.production.cpu_limits | not
          repo: ${Metadata.Name}
          filePath: app.toml
          rule: jsonpath
        - id: check-app-toml-memory-limits
          name: Check if  memory limits are defined in app.toml under [service] or [service.production]
          type: extract
          source: github
          jsonPath: .service.memory_limits // .service.production.memory_limits | . != null
          repo: ${Metadata.Name}
          filePath: app.toml
          rule: jsonpath
        - id: aggregate-resource-requests
          name: check resource requests and limits
          type: aggregate
          dependsOn:
            - check-app-toml-resource-request
            - check-app-toml-cpu-limits
            - check-app-toml-memory-limits
          method: and
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/223be0f4-d7bb-4254-9529-e77aa497e798
    name: allocation-efficiency
    description: https://github.com/motain/of-catalog/blob/main/docs/grading-system/cost-optimization.md#cost-optimization-grading-system
    format:
        unit: Allocation Efficiency
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: alert-routing-and-notifications
    labels:
        grading-system: observability
    componentType:
        - service
    facts:
        - id: fetch-slos
          name: Fetch SLOs
          type: extract
          source: jsonapi
          uri: https://api.eu1.honeycomb.io/1/slos/${Metadata.Name}
          jsonPath: .[].id
          auth:
            header: X-Honeycomb-Team
            tokenVar: HONEYCOMB_API_KEY
          rule: jsonpath
        - id: fetch-alerts-for-slos
          name: Fetch alerts for SLOs
          type: extract
          dependsOn:
            - fetch-slos
          source: jsonapi
          uri: https://api.eu1.honeycomb.io/1/burn_alerts/${Metadata.Name}?slo_id=:slo_id
          jsonPath: .[].id
          auth:
            header: X-Honeycomb-Team
            tokenVar: HONEYCOMB_API_KEY
          rule: jsonpath
        - id: fetch-recipients-for-alerts
          name: Fetch recipients for Alerts
          type: extract
          dependsOn:
            - fetch-alerts-for-slos
          source: jsonapi
          uri: https://api.eu1.honeycomb.io/1/burn_alerts/${Metadata.Name}/:alert_id
          jsonPath: .recipients[].target
          auth:
            header: X-Honeycomb-Team
            tokenVar: HONEYCOMB_API_KEY
          rule: jsonpath
        - id: validate-each-target-is-not-empty-string
          name: Validate that each target is not an empty string
          type: validate
          dependsOn:
            - fetch-recipients-for-alerts
          rule: regex_match
          pattern: ^\S.*$
        - id: validate-all-targets-are-not-empty-strings
          name: Validate that all targets are not empty strings
          type: aggregate
          dependsOn:
            - validate-each-target-is-not-empty-string
          method: and
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/9a068e9d-a760-4928-a092-e626128aeeb0
    name: alert-routing-and-notifications
    description: https://github.com/motain/of-catalog/blob/main/docs/grading-system/observability.md#alert-routing-and-notifications
    format:
        unit: Critical Alerts/SLO Check
